/*
 * This file was generated by the Gradle "init" task.
 */

buildscript {

    ext {
        springBootVersion = '2.2.2.RELEASE'
        jooqVersion = '3.13.1'
        lombokVerion = '1.18.12'
        postgesqlVersion = '42.2.12'
    }

    dependencies {
        classpath "org.jooq:jooq-codegen:${jooqVersion}"
        classpath "org.postgresql:postgresql:42.2.12"
    }
}

plugins {
    id "java"
    id "maven-publish"
    id 'nu.studer.jooq' version '4.1'
}

repositories {
    mavenLocal()
    jcenter()
}


dependencies {
//    SPRING BOOT
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-jooq:${springBootVersion}"
//    LOMBOK
    annotationProcessor "org.projectlombok:lombok:${lombokVerion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVerion}"
    compile "org.projectlombok:lombok:${lombokVerion}"
//    DATABASE
    compile "org.jooq:jooq:${jooqVersion}"
    compile "org.jooq:jooq-codegen:${jooqVersion}"
    compile "org.postgresql:postgresql:${postgesqlVersion}"
    jooqRuntime "org.postgresql:postgresql:${postgesqlVersion}"
//    TEST
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testCompile "org.junit.jupiter:junit-jupiter-api:RELEASE"
    testCompile "org.assertj:assertj-core:3.11.1"

}

group = "com.example"
version = "0.0.1-SNAPSHOT"
description = "demo"
sourceCompatibility = "1.11"

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// gradle generateDbJooqSchemaSource --rerun-tasks
jooq {
    db(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/postgres'
            user = 'postgres'
            password = 'MySuperPass123'
        }
        generator {
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                includes = '.*'
                /*customTypes {
                    customType {
                        name = 'Person'
                        type = 'li.barlog.model.Person'
                        binding = 'li.barlog.jooq.PersonBinding'
                    }
                }
                forcedTypes {
                    forcedType {
                        userType = 'li.barlog.model.Person'
                        binding = 'li.barlog.jooq.PersonBinding'
                        expression = '.*\\.person.data'
                    }
                }*/
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                javaTimeTypes = true
            }
            target {
                packageName = 'jooq'
                directory = 'src/main/java/com/example/demo/entity'
            }
        }
    }
}
